trigger:
  - master

variables:
  package.manager: "mamba"
  build.dir: $(Agent.BuildDirectory)
  codecov.token: "bd02b09d-d24f-45a3-8c0b-25eec64a29e7"
  system.debug: "false"

  carsus.db.url: "https://github.com/tardis-sn/carsus-db.git"
  carsus.refdata.url: "https://github.com/tardis-sn/carsus-refdata.git"

  # Chianti
  chianti.db.version: "9.0.1"
  chianti.data.url: "https://download.chiantidatabase.org"
  chianti.db.url: "$(chianti.data.url)/CHIANTI_v$(chianti.db.version)_database.tar.gz"
  xuvtop: "$(build.dir)/chianti"

jobs:
  - job:
    pool:
      vmImage: $[variables.vm_Image]

    strategy:
      matrix:
        Linux:
          vm_Image: 'ubuntu-latest'

        macOS:
          vm_Image: 'macOS-latest'

      maxParallel: 2

    steps:
      - bash: echo "##vso[task.setvariable variable=shellopts]errexit"
        displayName: "Force exit on error (bash)"

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: "Add conda to PATH"

      - bash: sudo chown -R $USER $CONDA
        displayName: 'Take ownership of conda installation'
        condition: eq(variables['Agent.OS'], 'Darwin')

      - bash: conda install mamba -c conda-forge -y
        displayName: "Install Mamba"
        condition: eq(variables['package.manager'], 'mamba')

      - bash: $(package.manager) env create -f carsus_env3.yml
        displayName: "Install Carsus environment"

      - bash: |
          locate libopenblas.dylib
          locate libopenblas.0.dylib
        displayName: "Debug step"

      - bash: |
          GIT_LFS_SKIP_SMUDGE=1 git clone $(carsus.db.url) $(build.dir)/carsus-db
          cd $(build.dir)/carsus-db
          git lfs pull --include="test_databases/test.db"
        displayName: "Fetch testing database"

      - bash: |
          mkdir -p $(xuvtop)
          cd $(xuvtop)
          curl -O $CHIANTI_DB_URL
          tar -zxvf CHIANTI_v$(chianti.db.version)_database.tar.gz -C $(xuvtop)
        displayName: "Fetch Chianti database"

      - bash: git clone $(carsus.refdata.url) $(build.dir)/carsus-refdata
        displayName: "Fetch reference data"

      - bash: |
          source activate carsus
          python setup.py build_ext --inplace
        displayName: "Build C extensions"

      - bash: |
          source activate carsus
          pip install pytest-azurepipelines
          pytest carsus --remote-data --runslow --test-db=$(build.dir)/carsus-db/test_databases/test.db --refdata=$(build.dir)/carsus-refdata --cov=carsus --cov-report=xml --cov-report=html
        displayName: "Run tests"

      - bash: bash <(curl -s https://codecov.io/bash)
        displayName: "Upload to codecov.io"
